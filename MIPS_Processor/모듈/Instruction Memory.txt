library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity InstructionMemory is
    port (
        PC: in unsigned(31 downto 0);                -- 입력 PC (Program Counter)
        Instruction: out std_logic_vector(31 downto 0) -- 출력 명령어 (32비트)
    );
end entity;

architecture Behavioral of InstructionMemory is
    -- Instruction Memory 정의: 128개의 32비트 명령어 저장
    type MemoryType is array (0 to 127) of std_logic_vector(31 downto 0);
    signal Memory: MemoryType := (
        -- 1. 변수 초기화 (x1 = 10, x2 = 20)
        0 => x"000000B3", -- ADD x1, x0, x0      ; x1 = 0
        1 => x"00A00093", -- ADDI x1, x0, 10     ; x1 = 10
        2 => x"00000133", -- ADD x2, x0, x0      ; x2 = 0
        3 => x"01400113", -- ADDI x2, x0, 20     ; x2 = 20

        -- 2. 산술 연산 (x3 = x1 + x2)
        4 => x"002081B3", -- ADD x3, x1, x2      ; x3 = x1 + x2

        -- 3. 조건부 분기 (if x3 > 25)
        5 => x"01910063", -- BLT x3, x4, Label1  ; if x3 < 25, branch

        -- 4. 루프 실행 (x4 = x4 - 1, 반복)
        6 => x"FFF20213", -- ADDI x4, x4, -1     ; x4 = x4 - 1
        7 => x"FE000EE3", -- BEQ x4, x0, End     ; if x4 == 0, branch to End

        -- 5. Jump (무조건 점프)
        8 => x"0000006F", -- JAL x0, Label1      ; Jump to Label1

        -- 6. 메모리 접근
        9 => x"00412023", -- SW x4, 4(x0)        ; Store x4 at Mem[4]
        10 => x"00413003", -- LW x6, 4(x0)       ; Load x6 from Mem[4]

        -- Label1:
        11 => x"00000013", -- NOP                ; No operation

        -- End:
        12 => x"00000013", -- NOP                ; No operation

        -- Default (빈 메모리 초기화)
        others => (others => '0')
    );
begin
    -- PC에 따라 명령어 출력
    process(PC)
    begin
        Instruction <= Memory(to_integer(PC(8 downto 2))); -- 32비트 정렬
    end process;
end Behavioral;
