library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity InstructionDecoder is
    port (
        Instruction: in std_logic_vector(31 downto 0); -- 입력 명령어 (32비트)

        opcode: out std_logic_vector(6 downto 0);      -- opcode 필드 (7비트)
        rd: out unsigned(4 downto 0);                  -- 목적 레지스터 (5비트)
        rs1, rs2: out unsigned(4 downto 0);            -- 소스 레지스터 1, 2 (5비트)
        func3: out std_logic_vector(2 downto 0);       -- funct3 필드 (3비트)
        func7: out std_logic_vector(6 downto 0);       -- funct7 필드 (7비트)
        imm: out signed(19 downto 0);                  -- 상수값 (20비트)
        imm_20bit: out std_logic                       -- 상수값이 몇 비트인지 ALU에 전달
    );
end entity;

architecture Behavioral of InstructionDecoder is
begin
    process(Instruction)
    begin
        -- 기본값 초기화
        opcode <= Instruction(6 downto 0);
        rd <= unsigned(Instruction(11 downto 7)); 
        rs1 <= unsigned(Instruction(19 downto 15)); 
        rs2 <= unsigned(Instruction(24 downto 20)); 
        func3 <= Instruction(14 downto 12); 
        func7 <= Instruction(31 downto 25);
        imm <= (others => '0'); -- 기본값
        imm_20bit <= '0';

        -- 명령어 디코딩
        case Instruction(6 downto 0) is
            -- S-type: imm = [31:25] & [11:7]
            when "0100011" =>
                imm <= signed("00000000" & Instruction(31 downto 25) & Instruction(11 downto 7));
            
            -- B-type: imm = [31] & [7] & [30:25] & [11:8]
            when "1100011" =>
                imm <= signed("00000000" & Instruction(31) & Instruction(7) & Instruction(30 downto 25) & Instruction(11 downto 8));
            
            -- U-type: imm = [31:12] & 12'b0
            when "0110111" | "0010111" =>
                imm <= signed(Instruction(31 downto 12));
                imm_20bit <= '1';
            
            -- J-type: imm = [31] & [19:12] & [20] & [30:21]
            when "1101111" =>
                imm <= signed(Instruction(31) & Instruction(19 downto 12) & Instruction(20) & Instruction(30 downto 21));
                imm_20bit <= '1';
            
            -- I-type 기본 Immediate 처리
            when others =>
                null;
        end case;
    end process;
end Behavioral;